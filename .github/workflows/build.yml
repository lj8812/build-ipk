name: Compile OpenClash x86_64 With Core

on: 
  push:
    branches:
      - dev
    paths:
      - 'luci-app-openclash/Makefile'
  workflow_dispatch:

jobs:
  Get-Version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      current_version: ${{ steps.current_version.outputs.version }}
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: New Version
        id: version
        run: |
          echo "version=$(grep 'PKG_VERSION:=' ./luci-app-openclash/Makefile |awk -F '=' '{print $2}')" >> $GITHUB_OUTPUT
          echo "New Version: $(grep 'PKG_VERSION:=' ./luci-app-openclash/Makefile |awk -F '=' '{print $2}')"

      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          ref: package

      - name: Current Version
        id: current_version
        run: |
          echo "version=$(sed -n 1p ./${{ github.ref_name }}/version |awk -F 'v' '{print $2}')" >> $GITHUB_OUTPUT
          echo "Current Version: $(sed -n 1p ./${{ github.ref_name }}/version |awk -F 'v' '{print $2}')"

  Compile:
    runs-on: ubuntu-latest
    needs: Get-Version
    if: ${{ needs.Get-Version.outputs.version != needs.Get-Version.outputs.current_version }}
    steps:
      - name: Clone OpenClash dev Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Apt Update
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get -y install curl git tar zstd gzip

      - name: Install OpenWrt SNAPSHOT SDK
        run: |
          mkdir -p tmp
          curl -SLk --connect-timeout 30 --retry 2 "https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst" -o "./tmp/SDK.tar.zst"
          cd tmp
          zstd -d SDK.tar.zst
          tar xf SDK.tar
          mv "openwrt-sdk-x86-64_gcc-13.3.0_musl.Linux-x86_64" "SDK"

      - name: Prepare Source Code
        run: |
          mkdir -p tmp/SDK/package/luci-app-openclash/files/etc/openclash/core
          cp -rf "./luci-app-openclash/." "./tmp/SDK/package/luci-app-openclash/"

      - name: Download Core Components
        run: |
          CORE_DIR="../tmp/SDK/package/luci-app-openclash/files/etc/openclash/core"
          
          # Clash Premium (TUN) x86_64
          curl -L https://github.com/vernesong/OpenClash/releases/download/TUN/clash-linux-amd64.tar.gz -o "$CORE_DIR/clash.tar.gz"
          tar -xzvf "$CORE_DIR/clash.tar.gz" -C "$CORE_DIR"
          rm "$CORE_DIR/clash.tar.gz"

          # Clash Meta x86_64 (最新版本)
          LATEST_META=$(curl -sL https://api.github.com/repos/MetaCubeX/Clash.Meta/releases/latest | grep -oP 'https://.*clash.meta-linux-amd64[^"]*')
          curl -L $LATEST_META -o "$CORE_DIR/clash_meta.gz"
          gzip -d "$CORE_DIR/clash_meta.gz"
          mv "$CORE_DIR/clash_meta" "$CORE_DIR/clash_meta"
          chmod +x "$CORE_DIR/clash_meta"

      - name: Compile po2lmo
        run: |
          cd tmp/SDK/package/
          pushd luci-app-openclash/tools/po2lmo
          make && sudo make install
          popd

      - name: Compile Package
        run: |
          cd tmp/SDK
          make defconfig
          make package/luci-app-openclash/compile V=99

      - name: Switch to Package Branch
        uses: actions/checkout@v4
        with:
          ref: package

      - name: Publish Release
        run: |
          # 清理旧版本
          rm -rf ./${{ github.ref_name }}/luci-app-openclash*
          mkdir -p ./${{ github.ref_name }}/core

          # 更新版本信息
          echo "v${{ needs.Get-Version.outputs.version }}" > ./${{ github.ref_name }}/version
          echo "https://img.shields.io/badge/Release-v${{ needs.Get-Version.outputs.version }}-blue.svg" >> ./${{ github.ref_name }}/version

          # 复制编译结果
          cp ../tmp/SDK/bin/packages/x86_64/base/luci-app-openclash_${{ needs.Get-Version.outputs.version }}_x86_64.ipk ./${{ github.ref_name }}/
          cp ../tmp/SDK/package/luci-app-openclash/files/etc/openclash/core/* ./${{ github.ref_name }}/core/

          # 更新文档
          sed -i -E "s/(Latest Version: )v[0-9.]+/\1v${{ needs.Get-Version.outputs.version }}/g" ./${{ github.ref_name }}/README.md
          sed -i -E "s/(sha256: )\w+/\1$(sha256sum ./${{ github.ref_name }}/luci-app-openclash_* | awk '{print $1}')/g" ./${{ github.ref_name }}/README.md

          # 提交变更
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "x86_64 Build: v${{ needs.Get-Version.outputs.version }}"
          git push
